==1843== Memcheck, a memory error detector
==1843== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1843== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==1843== Command: ./a.out
==1843== 
This program will the heap functions.
 Heap:  size: 3, capacity: 3
indexes:           0,     1,     2,
values:           43,    20,    10,

removed:     43
Heap:  size: 2, capacity: 3
indexes:           0,     1,
values:           20,    10,

peek:        20
Heap:  size: 2, capacity: 3
indexes:           0,     1,
values:           20,    10,

add:         17
Heap:  size: 3, capacity: 3
indexes:           0,     1,     2,
values:           20,    10,    17,

sorted array:     10,     17,     20, 

removed:     20
Heap:  size: 2, capacity: 3
indexes:           0,     1,
values:           17,    10,

removed:     17
Heap:  size: 1, capacity: 3
indexes:           0,
values:           10,

After call to destroy (1)
Heap:  size: 0, capacity: 0
indexes:      
values:       

Created empty heap: 
Heap:  size: 0, capacity: 11
indexes:      
values:       

add:        204
Heap:  size: 1, capacity: 11
indexes:           0,
values:          204,

After call to destroy(2)
Heap:  size: 0, capacity: 0
indexes:      
values:       

After call to destroy(3)
Heap:  size: 0, capacity: 0
indexes:      
values:       

==1843== 
==1843== HEAP SUMMARY:
==1843==     in use at exit: 0 bytes in 0 blocks
==1843==   total heap usage: 4 allocs, 4 frees, 1,092 bytes allocated
==1843== 
==1843== All heap blocks were freed -- no leaks are possible
==1843== 
==1843== For lists of detected and suppressed errors, rerun with: -s
==1843== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
student@maverick:/media/sf_VM_UTA/hw3$ gcc -g -s run_test_quynh.c -lm heap_quynh.c heap.h
student@maverick:/media/sf_VM_UTA/hw3$ valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --tool=memcheck ./a.out
==1854== Memcheck, a memory error detector
==1854== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1854== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==1854== Command: ./a.out
==1854== 

Enter the filename: data1.txt
Heap:  size: 7, capacity: 7
indexes:           0,     1,     2,     3,     4,     5,     6,
values:           35,    25,    30,    20,    10,     5,    15,

Operation number 1, string: s
sorted array:      5,     10,     15,     20,     25,     30,     35, 
Heap:  size: 7, capacity: 7
indexes:           0,     1,     2,     3,     4,     5,     6,
values:           35,    25,    30,    20,    10,     5,    15,

Operation number 2, string: *
Removed:     35
Heap:  size: 6, capacity: 7
indexes:           0,     1,     2,     3,     4,     5,
values:           30,    25,    15,    20,    10,     5,

Operation number 3, string: *
Removed:     30
Heap:  size: 5, capacity: 7
indexes:           0,     1,     2,     3,     4,
values:           25,    20,    15,     5,    10,

Operation number 4, string: 9
Add:         9
Heap:  size: 6, capacity: 7
indexes:           0,     1,     2,     3,     4,     5,
values:           25,    20,    15,     5,    10,     9,

Operation number 5, string: *
Removed:     25
Heap:  size: 5, capacity: 7
indexes:           0,     1,     2,     3,     4,
values:           20,    10,    15,     5,     9,

Operation number 6, string: S
sorted array:      5,      9,     10,     15,     20, 
Heap:  size: 5, capacity: 7
indexes:           0,     1,     2,     3,     4,
values:           20,    15,    10,     5,     9,

Operation number 7, string: s
sorted array:      5,      9,     10,     15,     20, 
Heap:  size: 5, capacity: 7
indexes:           0,     1,     2,     3,     4,
values:           20,    15,    10,     5,     9,

Operation number 8, string: 100
Add:       100
Heap:  size: 6, capacity: 7
indexes:           0,     1,     2,     3,     4,     5,
values:          100,    15,    20,     5,     9,    10,

Operation number 9, string: *
Removed:    100
Heap:  size: 5, capacity: 7
indexes:           0,     1,     2,     3,     4,
values:           20,    15,    10,     5,     9,

Operation number 10, string: *
Removed:     20
Heap:  size: 4, capacity: 7
indexes:           0,     1,     2,     3,
values:           15,     9,    10,     5,

Operation number 11, string: 1
Add:         1
Heap:  size: 5, capacity: 7
indexes:           0,     1,     2,     3,     4,
values:           15,     9,    10,     5,     1,

==1854== 
==1854== HEAP SUMMARY:
==1854==     in use at exit: 0 bytes in 0 blocks
==1854==   total heap usage: 8 allocs, 8 frees, 10,808 bytes allocated
==1854== 
==1854== All heap blocks were freed -- no leaks are possible
==1854== 
==1854== For lists of detected and suppressed errors, rerun with: -s
==1854== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
student@maverick:/media/sf_VM_UTA/hw3$ valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --tool=memcheck ./a.out
==1856== Memcheck, a memory error detector
==1856== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1856== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==1856== Command: ./a.out
==1856== 

Enter the filename: data2.txt
Heap:  size: 17, capacity: 17
indexes:           0,     1,     2,     3,     4,     5,     6,     7,     8,     9,    10,    11,    12,    13,    14,    15,    16,
values:           35,    25,    30,    20,    10,     6,    15,     9,     2,     3,     4,     5,     5,     7,     8,     1,     0,

Operation number 1, string: *
Removed:     35
Heap:  size: 16, capacity: 17
indexes:           0,     1,     2,     3,     4,     5,     6,     7,     8,     9,    10,    11,    12,    13,    14,    15,
values:           30,    25,    15,    20,    10,     6,     8,     9,     2,     3,     4,     5,     5,     7,     0,     1,

Operation number 2, string: *
Removed:     30
Heap:  size: 15, capacity: 17
indexes:           0,     1,     2,     3,     4,     5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
values:           25,    20,    15,     9,    10,     6,     8,     1,     2,     3,     4,     5,     5,     7,     0,

Operation number 3, string: 9
Add:         9
Heap:  size: 16, capacity: 17
indexes:           0,     1,     2,     3,     4,     5,     6,     7,     8,     9,    10,    11,    12,    13,    14,    15,
values:           25,    20,    15,     9,    10,     6,     8,     9,     2,     3,     4,     5,     5,     7,     0,     1,

Operation number 4, string: *
Removed:     25
Heap:  size: 15, capacity: 17
indexes:           0,     1,     2,     3,     4,     5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
values:           20,    10,    15,     9,     4,     6,     8,     9,     2,     3,     1,     5,     5,     7,     0,

Operation number 5, string: 100
Add:       100
Heap:  size: 16, capacity: 17
indexes:           0,     1,     2,     3,     4,     5,     6,     7,     8,     9,    10,    11,    12,    13,    14,    15,
values:          100,    20,    15,    10,     4,     6,     8,     9,     2,     3,     1,     5,     5,     7,     0,     9,

Operation number 6, string: *
Removed:    100
Heap:  size: 15, capacity: 17
indexes:           0,     1,     2,     3,     4,     5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
values:           20,    10,    15,     9,     4,     6,     8,     9,     2,     3,     1,     5,     5,     7,     0,

Operation number 7, string: *
Removed:     20
Heap:  size: 14, capacity: 17
indexes:           0,     1,     2,     3,     4,     5,     6,     7,     8,     9,    10,    11,    12,    13,
values:           15,    10,     8,     9,     4,     6,     7,     9,     2,     3,     1,     5,     5,     0,

Operation number 8, string: 1
Add:         1
Heap:  size: 15, capacity: 17
indexes:           0,     1,     2,     3,     4,     5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
values:           15,    10,     8,     9,     4,     6,     7,     9,     2,     3,     1,     5,     5,     0,     1,

==1856== 
==1856== HEAP SUMMARY:
==1856==     in use at exit: 0 bytes in 0 blocks
==1856==   total heap usage: 5 allocs, 5 frees, 10,780 bytes allocated
==1856== 
==1856== All heap blocks were freed -- no leaks are possible
==1856== 
==1856== For lists of detected and suppressed errors, rerun with: -s
==1856== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
student@maverick:/media/sf_VM_UTA/hw3$ valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --tool=memcheck ./a.out
==1858== Memcheck, a memory error detector
==1858== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1858== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==1858== Command: ./a.out
==1858== 

Enter the filename: empty.txt
Heap:  size: 2, capacity: 2
indexes:           0,     1,
values:           40,    10,

Operation number 1, string: *
Removed:     40
Heap:  size: 1, capacity: 2
indexes:           0,
values:           10,

Operation number 2, string: *
Removed:     10
Heap:  size: 0, capacity: 2
indexes:      
values:       

Operation number 3, string: *
Empty heap. No remove performed.Removed:      0
Heap:  size: 0, capacity: 2
indexes:      
values:       

Operation number 4, string: *
Empty heap. No remove performed.Removed:      0
Heap:  size: 0, capacity: 2
indexes:      
values:       

Operation number 5, string: 12
Add:        12
Heap:  size: 1, capacity: 2
indexes:           0,
values:           12,

Operation number 6, string: *
Removed:     12
Heap:  size: 0, capacity: 2
indexes:      
values:       

Operation number 7, string: 85
Add:        85
Heap:  size: 1, capacity: 2
indexes:           0,
values:           85,

Operation number 8, string: 39
Add:        39
Heap:  size: 2, capacity: 2
indexes:           0,     1,
values:           85,    39,

Operation number 9, string: *
Removed:     85
Heap:  size: 1, capacity: 2
indexes:           0,
values:           39,

Operation number 10, string: *
Removed:     39
Heap:  size: 0, capacity: 2
indexes:      
values:       

==1858== 
==1858== HEAP SUMMARY:
==1858==     in use at exit: 0 bytes in 0 blocks
==1858==   total heap usage: 5 allocs, 5 frees, 10,720 bytes allocated
==1858== 
==1858== All heap blocks were freed -- no leaks are possible
==1858== 
==1858== For lists of detected and suppressed errors, rerun with: -s
==1858== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
student@maverick:/media/sf_VM_UTA/hw3$ valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --tool=memcheck ./a.out
==1860== Memcheck, a memory error detector
==1860== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1860== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==1860== Command: ./a.out
==1860== 

Enter the filename: all_ops.txt
Heap:  size: 5, capacity: 5
indexes:           0,     1,     2,     3,     4,
values:           90,    50,    20,    10,    40,

Operation number 1, string: 13
Add:        13

resizing
Heap:  size: 6, capacity: 10
indexes:           0,     1,     2,     3,     4,     5,
values:           90,    50,    20,    10,    40,    13,

Operation number 2, string: S
sorted array:     10,     13,     20,     40,     50,     90, 
Heap:  size: 6, capacity: 10
indexes:           0,     1,     2,     3,     4,     5,
values:           90,    50,    20,    40,    13,    10,

Operation number 3, string: *
Removed:     90
Heap:  size: 5, capacity: 10
indexes:           0,     1,     2,     3,     4,
values:           50,    40,    20,    10,    13,

Operation number 4, string: s
sorted array:     10,     13,     20,     40,     50, 
Heap:  size: 5, capacity: 10
indexes:           0,     1,     2,     3,     4,
values:           50,    40,    20,    10,    13,

Operation number 5, string: 82
Add:        82
Heap:  size: 6, capacity: 10
indexes:           0,     1,     2,     3,     4,     5,
values:           82,    40,    50,    10,    13,    20,

Operation number 6, string: p
Peek:        82
Heap:  size: 6, capacity: 10
indexes:           0,     1,     2,     3,     4,     5,
values:           82,    40,    50,    10,    13,    20,

Operation number 7, string: P
Peek:        82
Heap:  size: 6, capacity: 10
indexes:           0,     1,     2,     3,     4,     5,
values:           82,    40,    50,    10,    13,    20,

Operation number 8, string: *
Removed:     82
Heap:  size: 5, capacity: 10
indexes:           0,     1,     2,     3,     4,
values:           50,    40,    20,    10,    13,

==1860== 
==1860== HEAP SUMMARY:
==1860==     in use at exit: 0 bytes in 0 blocks
==1860==   total heap usage: 8 allocs, 8 frees, 10,816 bytes allocated
==1860== 
==1860== All heap blocks were freed -- no leaks are possible
==1860== 
==1860== For lists of detected and suppressed errors, rerun with: -s
==1860== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
student@maverick:/media/sf_VM_UTA/hw3$ valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --tool=memcheck ./a.out
==2182== Memcheck, a memory error detector
==2182== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2182== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==2182== Command: ./a.out
==2182== 

Enter the filename: resize.txt
Heap:  size: 2, capacity: 2
indexes:           0,     1,
values:           40,    10,

Operation number 1, string: 5
Add:         5

resizing
Heap:  size: 3, capacity: 4
indexes:           0,     1,     2,
values:           40,    10,     5,

Operation number 2, string: -6
Add:        -6
Heap:  size: 4, capacity: 4
indexes:           0,     1,     2,     3,
values:           40,    10,     5,    -6,

Operation number 3, string: 85
Add:        85

resizing
Heap:  size: 5, capacity: 8
indexes:           0,     1,     2,     3,     4,
values:           85,    40,     5,    -6,    10,

Operation number 4, string: 1
Add:         1
Heap:  size: 6, capacity: 8
indexes:           0,     1,     2,     3,     4,     5,
values:           85,    40,     5,    -6,    10,     1,

Operation number 5, string: 2
Add:         2
Heap:  size: 7, capacity: 8
indexes:           0,     1,     2,     3,     4,     5,     6,
values:           85,    40,     5,    -6,    10,     1,     2,

Operation number 6, string: 3
Add:         3
Heap:  size: 8, capacity: 8
indexes:           0,     1,     2,     3,     4,     5,     6,     7,
values:           85,    40,     5,     3,    10,     1,     2,    -6,

Operation number 7, string: 4
Add:         4

resizing
Heap:  size: 9, capacity: 16
indexes:           0,     1,     2,     3,     4,     5,     6,     7,     8,
values:           85,    40,     5,     4,    10,     1,     2,    -6,     3,

Operation number 8, string: 5
Add:         5
Heap:  size: 10, capacity: 16
indexes:           0,     1,     2,     3,     4,     5,     6,     7,     8,     9,
values:           85,    40,     5,     4,    10,     1,     2,    -6,     3,     5,

Operation number 9, string: 6
Add:         6
Heap:  size: 11, capacity: 16
indexes:           0,     1,     2,     3,     4,     5,     6,     7,     8,     9,    10,
values:           85,    40,     5,     4,    10,     1,     2,    -6,     3,     5,     6,

==2182== 
==2182== HEAP SUMMARY:
==2182==     in use at exit: 0 bytes in 0 blocks
==2182==   total heap usage: 8 allocs, 8 frees, 10,832 bytes allocated
==2182== 
==2182== All heap blocks were freed -- no leaks are possible
==2182== 
==2182== For lists of detected and suppressed errors, rerun with: -s
==2182== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

